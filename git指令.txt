ls 查找当前的目录
cd  进入路径
cd .. 返回上一级目录
cd 补全目录名称+ table键  自动补全目录名称
pwd 显示当前路径
mkdir  创建文件

　-d或–directory 　直接把欲删除的目录的硬连接数据删成0，删除该目录。 
　-f或–force 　强制删除文件或目录。 
　-r或-R或–recursive 　递归处理，将指定目录下的所有文件及子目录一并处理。

git 命令

git init //将当前的文件夹  初始化成 git版本控制系统

git config --global user.name 'xxxx'
git config --global user.email 'xxx@qq.com'

git add . 添加所有的

git  commit
i  
输入这次提交干了什么事

ESC
shift+ ：（冒号）
wq
git status 查看文件的状态 







git commit -m '做了什么事';



git add 文件名称  //将当前文件加入暂存区 缓冲区

git commit //提交修改至版本控制器

git commit -m "提交的信息" //每一次提交的时候一定要写log 表示当前的操作是什么


git status //查看当前的工作区的状态


git diff 文件名称   //查看文件的修改


git  log  //查看提交信息

git reset --hard HEAD^   //回到上一个版本

git reflog   //查看以往的git 操作纪录

  
git checkout -- readme.text   重新拉取 某个文件


git rm  文件名 //删除管理库中的某个文件


//将本地的代码版本管理库提交到github上去


echo "# itzan" >> README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin https://github.com/kpsurreal/itzan
git push -u origin master

如果不行就强行 
git push --force origin master


 git push 上传代码

git pull 拉取




可以配置  .gitignore 文件 过滤 不提交